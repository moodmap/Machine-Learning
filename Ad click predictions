#Creating an initial algorithm using logistical regression, predicting whether a user will click on an ad, based on multiple data points relating to the user
#Importing the relevant libraries
import numpy as np
import pandas as pd
import sklearn
import matplotlib.pyplot as plt
import seaborn as sns
print("HI")
%matplotlib inline

#Opening file and looking at the basics of the data
ad_data = pd.read_csv("advertising.csv")
ad_data.head()
ad_data.info()
ad_data.describe()

#Visualising the data
ad_data['Age'].hist()
print('Done')
sns.jointplot(x='Age', y='Area Income', data=ad_data)
sns.jointplot(x='Daily Time Spent on Site',y='Daily Internet Usage', data = ad_data)
sns.pairplot(ad_data,hue='Clicked on Ad',palette='bwr')

#Splitting data into a train and test set, fitting the algorithm to the training set
ad_data.columns
X = ad_data[['Daily Time Spent on Site', 'Age', 'Area Income','Daily Internet Usage', 'Male']]
y = ad_data['Clicked on Ad']
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.1)
from sklearn.linear_model import LogisticRegression
logmodel = LogisticRegression()
logmodel.fit(X_train,y_train)

#Using this fitted algorithm and testing its validity
predictions = logmodel.predict(X_test)
from sklearn.metrics import classification_report
print(classification_report(y_test, predictions))


  precision    recall  f1-score   support

          0       0.92      0.94      0.93        48
          1       0.94      0.92      0.93        52

avg / total       0.93      0.93      0.93       100

#Not too bad




























